from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from config import REVIEWS_LINK, DB_PATH
from data.database import get_channels


async def get_main_menu():
    kb = [
        [InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="get_my_stat")],
        [InlineKeyboardButton(text="üí≠ –û—Ç–∑—ã–≤—ã", url=REVIEWS_LINK)],
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


async def get_stat_menu():
    kb = [
        [InlineKeyboardButton(text="üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="open_main_menu")],
    ]

    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard


async def get_game_keyboard(moves: dict[int, str | None]) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü—ã –∏–≥—Ä—ã –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ö–æ–¥–∞–º–∏.

    :param moves: –°–ª–æ–≤–∞—Ä—å —Å –ø–æ–∑–∏—Ü–∏—è–º–∏ –∏ —Ö–æ–¥–∞–º–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, {1: 'x', 2: 'o', 3: None}).
                  –ö–ª—é—á–∏ ‚Äî –Ω–æ–º–µ—Ä–∞ –ø–æ–∑–∏—Ü–∏–π (1-9), –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî 'x', 'o' –∏–ª–∏ None.
    :return: InlineKeyboardMarkup —Å —Ç–µ–∫—É—â–µ–π —Ç–∞–±–ª–∏—Ü–µ–π –∏–≥—Ä—ã.
    """
    # –°–∏–º–≤–æ–ª—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    symbols = {"x": "‚ùå", "o": "‚≠ïÔ∏è", None: "‚¨úÔ∏è"}  # –ü—É—Å—Ç–∞—è –∫–ª–µ—Ç–∫–∞

    kb = []

    # –§–æ—Ä–º–∏—Ä—É–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å—Ç—Ä–æ–∫–∞–º–∏ (3x3)
    for row in range(0, 9, 3):
        row_buttons = []
        for position in range(row + 1, row + 4):
            move = moves.get(position, None)
            if move is None:
                # –ö–Ω–æ–ø–∫–∞ –¥–ª—è —Ö–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                button = InlineKeyboardButton(
                    text=symbols[None], callback_data=f"move_{position}"
                )
            else:
                # –ö–Ω–æ–ø–∫–∞ —Å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º —Ö–æ–¥–æ–º
                button = InlineKeyboardButton(
                    text=symbols[move.lower()], callback_data="nothing"
                )
            row_buttons.append(button)
        kb.append(row_buttons)

    return InlineKeyboardMarkup(inline_keyboard=kb)


async def get_sponsor_sub():
    channels = await get_channels(DB_PATH)
    kb = [
        [InlineKeyboardButton(text=channel["name"], url=channel["link"])]
        for channel in channels
    ]

    kb.append([InlineKeyboardButton(text="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å ‚úÖ", callback_data="check_subs")])

    keyboard = InlineKeyboardMarkup(inline_keyboard=kb)

    return keyboard
